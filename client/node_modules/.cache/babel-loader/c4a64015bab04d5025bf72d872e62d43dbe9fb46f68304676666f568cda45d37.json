{"ast":null,"code":"var _jsxFileName = \"C:\\\\linux_clone-master\\\\client\\\\src\\\\Components\\\\Posts\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// to fetch the data from the global redux store\n\nimport { Grid, CircularProgress } from '@material-ui/core';\n// to create a grid using the material ui\n\nimport { useSelector } from 'react-redux';\nimport Post from './Post/post';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = _ref => {\n  _s();\n  let {\n    setCurrentId\n  } = _ref;\n  // A hook to access the redux store's state. This hook takes a selector function as an argument. The selector is called with the store state.\n  // When we get access to the state we can simply return all the posts in it..state.posts comes from reducer\n  const posts = useSelector(state => state.posts);\n  const classes = useStyles();\n  console.log(posts);\n  return !posts.length ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this) :\n  /*#__PURE__*/\n  // posts.length is used to show the post when it is greater than 0\n  _jsxDEV(Grid, {\n    classname: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map(post =>\n    /*#__PURE__*/\n    // xs is used to denote the size of post on mobile and sm on large devices.    \n    _jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n};\n_s(Posts, \"C/BxEwR0KgzJ2Knmlc9v0LYcdx8=\", false, function () {\n  return [useSelector, useStyles];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Grid","CircularProgress","useSelector","Post","useStyles","Posts","setCurrentId","posts","state","classes","console","log","length","container","map","post","_id"],"sources":["C:/linux_clone-master/client/src/Components/Posts/posts.js"],"sourcesContent":["import React from 'react';\n// to fetch the data from the global redux store\n\nimport { Grid, CircularProgress } from '@material-ui/core'\n// to create a grid using the material ui\n\nimport { useSelector } from 'react-redux';\n\nimport Post from './Post/post';\nimport useStyles from './styles';\n\nconst Posts=({setCurrentId}) => {\n    // A hook to access the redux store's state. This hook takes a selector function as an argument. The selector is called with the store state.\n    // When we get access to the state we can simply return all the posts in it..state.posts comes from reducer\n    const posts=useSelector((state) => state.posts);\n    const classes = useStyles();\n    console.log(posts);\n    return (\n        !posts.length ? <CircularProgress /> : (        // posts.length is used to show the post when it is greater than 0\n            <Grid classname={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                     // xs is used to denote the size of post on mobile and sm on large devices.    \n                    <Grid key={post._id} item xs={12} sm={6}>         \n                        <Post post={post} setCurrentId ={setCurrentId} />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    );\n}\n\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,SAASC,IAAI,EAAEC,gBAAgB,QAAQ,mBAAmB;AAC1D;;AAEA,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,SAAS,MAAM,UAAU;AAAC;AAEjC,MAAMC,KAAK,GAAC,QAAoB;EAAA;EAAA,IAAnB;IAACC;EAAY,CAAC;EACvB;EACA;EACA,MAAMC,KAAK,GAACL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,OAAO,GAAGL,SAAS,EAAE;EAC3BM,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClB,OACI,CAACA,KAAK,CAACK,MAAM,gBAAG,QAAC,gBAAgB;IAAA;IAAA;IAAA;EAAA,QAAG;EAAA;EAAY;EAC5C,QAAC,IAAI;IAAC,SAAS,EAAEH,OAAO,CAACI,SAAU;IAAC,SAAS;IAAC,UAAU,EAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAA,UACzEN,KAAK,CAACO,GAAG,CAAEC,IAAI;IAAA;IACX;IACD,QAAC,IAAI;MAAgB,IAAI;MAAC,EAAE,EAAE,EAAG;MAAC,EAAE,EAAE,CAAE;MAAA,uBACpC,QAAC,IAAI;QAAC,IAAI,EAAEA,IAAK;QAAC,YAAY,EAAGT;MAAa;QAAA;QAAA;QAAA;MAAA;IAAG,GAD1CS,IAAI,CAACC,GAAG;MAAA;MAAA;MAAA;IAAA,QAGtB;EAAC;IAAA;IAAA;IAAA;EAAA,QAET;AAET,CAAC;AAAA,GAlBKX,KAAK;EAAA,QAGKH,WAAW,EACPE,SAAS;AAAA;AAAA,KAJvBC,KAAK;AAoBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}