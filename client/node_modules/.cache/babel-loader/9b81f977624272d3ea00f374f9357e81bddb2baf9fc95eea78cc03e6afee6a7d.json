{"ast":null,"code":"var _jsxFileName = \"C:\\\\linux_clone-master\\\\client\\\\src\\\\Components\\\\Form\\\\form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@mui/material';\nimport FileBase64 from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Edit' : 'Create', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true\n        // The value is going to be stored in the state called postData(object) \n        // And then each object key is going to be a specific text field\n        ,\n        value: postData.creator\n        // changing the value of that state field using onchange\n        ,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase64, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"nr1aFA8kdzrVH2V/jFjC6sTL1ws=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase64","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["C:/linux_clone-master/client/src/Components/Form/form.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@mui/material';\nimport FileBase64 from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts'; \nimport { useSelector } from 'react-redux';\nconst Form=({currentId, setCurrentId}) => {\n    const [postData, setPostData]=useState({\n        creator: '', title: '', message: '', tags: '', selectedFile: ''\n    });\n    const post =useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch =useDispatch();\n\n    useEffect(() => {\n        if (post) setPostData(post);\n    }, [post])\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId,postData));\n        }else{\n            dispatch(createPost(postData));\n        }\n\n        clear();\n\n    }\n    const clear=()=>{\n        setCurrentId(null);\n        setPostData({\n            creator: '', title: '', message: '', tags: '', selectedFile: ''\n        });\n    }\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{currentId ? 'Edit' : 'Create'} a Memory</Typography>\n                <TextField \n                    name='creator' \n                    variant='outlined' \n                    label='Creator' \n                    fullWidth \n                    // The value is going to be stored in the state called postData(object) \n                    // And then each object key is going to be a specific text field\n                    value={postData.creator}\n                    // changing the value of that state field using onchange\n                    onChange={(e)=>setPostData({...postData, creator:e.target.value})}\n                />\n                <TextField \n                    name='title' \n                    variant='outlined' \n                    label='Title' \n                    fullWidth \n                    value={postData.title}\n                    onChange={(e)=>setPostData({...postData, title:e.target.value})}\n                />\n                <TextField \n                    name='message' \n                    variant='outlined' \n                    label='Message' \n                    fullWidth \n                    value={postData.message}\n                    onChange={(e)=>setPostData({...postData, message:e.target.value})}\n                />\n                <TextField \n                    name='tags' \n                    variant='outlined' \n                    label='Tags' \n                    fullWidth \n                    value={postData.tags}\n                    onChange={(e)=>setPostData({...postData, tags:e.target.value.split(',')})}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase64 \n                        type='file'\n                        multiple={false}\n                        onDone={({base64})=>setPostData({...postData, selectedFile:base64})}\n                    />\n                </div>\n\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}