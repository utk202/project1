{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\n\n// Action Creaters\n// These are the functions that return actions\n// Actions are the object having type and payloads(data)\n// It is asynchronous action\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error); // Here we don't use error.message as we lose information due to it\n  }\n};\n\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error); // Here we don't use error.message as we lose information due to it\n  }\n};\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error); // Here we don't use error.message as we lose information due to it\n  }\n};\n\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: 'LIKE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error); // Here we don't use error.message as we lose information due to it\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","CREATE","UPDATE","DELETE","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/Utkarsh Gupta/Desktop/Reminiscences/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\nimport { FETCH_ALL,CREATE,UPDATE,DELETE } from '../constants/actionTypes';\r\n\r\n// Action Creaters\r\n// These are the functions that return actions\r\n// Actions are the object having type and payloads(data)\r\n// It is asynchronous action\r\nexport const getPosts=() => async(dispatch) =>{\r\n    try {\r\n        const{data} = await api.fetchPosts();\r\n        dispatch({type: 'FETCH_ALL', payload:data});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const createPost =(post) => async(dispatch) =>{\r\n    try{\r\n        const{data} =await api.createPost(post);\r\n        dispatch({type : 'CREATE', payload:data});\r\n    } catch(error){\r\n        console.log(error);     // Here we don't use error.message as we lose information due to it\r\n    }\r\n};\r\n\r\nexport const updatePost = (id, post) => async(dispatch)=>{\r\n    try{\r\n        const {data} = await api.updatePost(id, post);\r\n        dispatch({type : 'UPDATE', payload:data});\r\n    }catch(error){\r\n        console.log(error);   // Here we don't use error.message as we lose information due to it\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async(dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: 'DELETE', payload: id });\r\n    } catch (error) {\r\n        console.log(error);    // Here we don't use error.message as we lose information due to it\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async(dispatch)=>{\r\n    try {\r\n        const {data} = await api.likePost(id);\r\n        dispatch({type : 'LIKE', payload:data});\r\n    }catch(error){\r\n        console.log(error);   // Here we don't use error.message as we lose information due to it\r\n    }    \r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SAASC,SAAS,EAACC,MAAM,EAACC,MAAM,EAACC,MAAM,QAAQ,0BAA0B;;AAEzE;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAC,MAAM,MAAMC,QAAQ,IAAI;EAC1C,IAAI;IACA,MAAK;MAACC;IAAI,CAAC,GAAG,MAAMP,GAAG,CAACQ,UAAU,EAAE;IACpCF,QAAQ,CAAC;MAACG,IAAI,EAAE,WAAW;MAAEC,OAAO,EAACH;IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AACD,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAK,MAAMV,QAAQ,IAAI;EACjD,IAAG;IACC,MAAK;MAACC;IAAI,CAAC,GAAE,MAAMP,GAAG,CAACe,UAAU,CAACC,IAAI,CAAC;IACvCV,QAAQ,CAAC;MAACG,IAAI,EAAG,QAAQ;MAAEC,OAAO,EAACH;IAAI,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAMI,KAAK,EAAC;IACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAK;EAC5B;AACJ,CAAC;;AAED,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAMV,QAAQ,IAAG;EACrD,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMP,GAAG,CAACiB,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAC7CV,QAAQ,CAAC;MAACG,IAAI,EAAG,QAAQ;MAAEC,OAAO,EAACH;IAAI,CAAC,CAAC;EAC7C,CAAC,QAAMI,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAG;EAC1B;AACJ,CAAC;;AAED,OAAO,MAAMQ,UAAU,GAAID,EAAE,IAAK,MAAMZ,QAAQ,IAAK;EACjD,IAAI;IACA,MAAMN,GAAG,CAACmB,UAAU,CAACD,EAAE,CAAC;IAExBZ,QAAQ,CAAC;MAAEG,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAEQ;IAAG,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAI;EAC3B;AACJ,CAAC;;AAED,OAAO,MAAMS,QAAQ,GAAIF,EAAE,IAAK,MAAMZ,QAAQ,IAAG;EAC7C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMP,GAAG,CAACoB,QAAQ,CAACF,EAAE,CAAC;IACrCZ,QAAQ,CAAC;MAACG,IAAI,EAAG,MAAM;MAAEC,OAAO,EAACH;IAAI,CAAC,CAAC;EAC3C,CAAC,QAAMI,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAG;EAC1B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}